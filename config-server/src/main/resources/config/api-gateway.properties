# ===================================================================
# Configuration for: api-gateway (Using Discovery Locator)
# Served BY the config-server TO the api-gateway application
# Location: config-server/src/main/resources/config/api-gateway.properties
# ===================================================================

# --- Gateway's Own Server Port ---
server.port=8080

# --- Spring Cloud Gateway Configuration ---

# Enable automatic routing based on Service Discovery
#spring.cloud.gateway.discovery.locator.enabled=true

# IMPORTANT: Use lowercase service IDs for routing.
# The gateway will take the first path segment (e.g., /user-service/), convert it to lowercase,
# and look for a service with that lowercase ID (e.g., 'user-service') in Eureka.
#spring.cloud.gateway.discovery.locator.lower-case-service-id=true

# --- Remove or comment out explicit route definitions ---
spring.cloud.gateway.routes[0].id=user-service-route
spring.cloud.gateway.routes[0].uri=lb://USER-SERVICE
spring.cloud.gateway.routes[0].predicates[0]=Path=/user-service/**
spring.cloud.gateway.routes[0].filters[0]=StripPrefix=1
# ... other explicit routes ...

# Route definition for restaurant-service
spring.cloud.gateway.routes[1].id=restaurant-service-route
# Use the correct registered name (likely RESTAURANT-SERVICE or restaurant-service - CHECK EUREKA)
spring.cloud.gateway.routes[1].uri=lb://RESTAURANT-SERVICE
spring.cloud.gateway.routes[1].predicates[0]=Path=/restaurant-service/**
spring.cloud.gateway.routes[1].filters[0]=StripPrefix=1
# IMPORTANT: Need to strip /api/restaurants? NO, controller path is /api/restaurants!
# If controller base path is /api/restaurants, and gateway path is /api/restaurants/**, we DON'T strip prefix.
# Let's assume for now the gateway path will be different, like /restaurant-api/**
# spring.cloud.gateway.routes[1].predicates[0]=Path=/restaurant-api/**
# spring.cloud.gateway.routes[1].filters[0]=StripPrefix=1 # Strip /restaurant-api

# --- Route Definition for order-service (Following the same pattern) ---
spring.cloud.gateway.routes[2].id=order-service-route
# Check Eureka registration case! (Assuming ORDER-SERVICE)
spring.cloud.gateway.routes[2].uri=lb://ORDER-SERVICE
# Gateway path uses the service name as a prefix
spring.cloud.gateway.routes[2].predicates[0]=Path=/order-service/**
# Strip the '/order-service' prefix before forwarding to the actual service
spring.cloud.gateway.routes[2].filters[0]=StripPrefix=1

# Route definition for payment-service
spring.cloud.gateway.routes[3].id=payment-service-route
# Check Eureka registration case! (Assuming PAYMENT-SERVICE or payment-service)
spring.cloud.gateway.routes[3].uri=lb://PAYMENT-SERVICE
# Use /payment-service/** prefix to match other routes
spring.cloud.gateway.routes[3].predicates[0]=Path=/payment-service/**
spring.cloud.gateway.routes[3].filters[0]=StripPrefix=1

# Route definition for driver-service
spring.cloud.gateway.routes[4].id=driver-service-route
# Check Eureka registration case! (Assuming DRIVER-SERVICE or driver-service)
spring.cloud.gateway.routes[4].uri=lb://DRIVER-SERVICE # ADJUST CASE AS NEEDED
# Following established pattern: Gateway path uses service name prefix
spring.cloud.gateway.routes[4].predicates[0]=Path=/driver-service/**
spring.cloud.gateway.routes[4].filters[0]=StripPrefix=1 # Strip /driver-service

# Route definition for delivery-service
spring.cloud.gateway.routes[5].id=delivery-service-route
# Check Eureka registration case!
spring.cloud.gateway.routes[5].uri=lb://DELIVERY-SERVICE # ADJUST CASE AS NEEDED
# Following established pattern
spring.cloud.gateway.routes[5].predicates[0]=Path=/delivery-service/**
spring.cloud.gateway.routes[5].filters[0]=StripPrefix=1

# --- SSE (Server-Sent Events) Timeout Configuration ---
spring.cloud.gateway.httpclient.response-timeout=60s


# --- Actuator Configuration ---
management.endpoints.web.exposure.include=health,info,gateway,configprops,prometheus

# --- Logging Levels (Can be reduced to INFO/WARN once working) ---
logging.level.org.springframework.cloud.gateway=TRACE
logging.level.reactor.netty=DEBUG
logging.level.org.springframework.cloud.gateway.handler.predicate=TRACE
logging.level.org.springframework.cloud.gateway.filter=TRACE
logging.level.org.springframework.cloud.loadbalancer=TRACE
logging.level.com.netflix.discovery=TRACE
logging.level.com.netflix.eureka=TRACE
logging.level.org.springframework.cloud.netflix.eureka.http=TRACE

# ===================================================================
# Reminder: 'spring.application.name', 'spring.config.import',
# 'eureka.client.service-url.defaultZone' should be in the
# API Gateway's LOCAL 'application.properties'.
# ===================================================================