
server.port=8080


spring.cloud.gateway.routes[0].id=user-service-auth-route # For public auth endpoints
spring.cloud.gateway.routes[0].uri=lb://USER-SERVICE
spring.cloud.gateway.routes[0].predicates[0]=Path=/user-service/api/auth/** # Specifically auth paths
spring.cloud.gateway.routes[0].filters[0]=StripPrefix=1


spring.cloud.gateway.routes[1].id=user-service-protected-route # For protected user endpoints
spring.cloud.gateway.routes[1].uri=lb://USER-SERVICE
spring.cloud.gateway.routes[1].predicates[0]=Path=/user-service/api/users/** # Example of protected path
spring.cloud.gateway.routes[1].filters[0]=StripPrefix=1
spring.cloud.gateway.routes[1].filters[1]=AuthenticationFilter # APPLY THE FILTER

spring.cloud.gateway.routes[2].id=restaurant-service-route
spring.cloud.gateway.routes[2].uri=lb://RESTAURANT-SERVICE
spring.cloud.gateway.routes[2].predicates[0]=Path=/restaurant-service/** # Assuming these are protected
spring.cloud.gateway.routes[2].filters[0]=StripPrefix=1
spring.cloud.gateway.routes[2].filters[1]=AuthenticationFilter # APPLY THE FILTER

spring.cloud.gateway.routes[3].id=order-service-route
spring.cloud.gateway.routes[3].uri=lb://ORDER-SERVICE
spring.cloud.gateway.routes[3].predicates[0]=Path=/order-service/** # Assuming these are protected
spring.cloud.gateway.routes[3].filters[0]=StripPrefix=1
spring.cloud.gateway.routes[3].filters[1]=AuthenticationFilter # APPLY THE FILTER

spring.cloud.gateway.routes[4].id=payment-service-route
spring.cloud.gateway.routes[4].uri=lb://PAYMENT-SERVICE
spring.cloud.gateway.routes[4].predicates[0]=Path=/payment-service/** # Assuming these are protected
spring.cloud.gateway.routes[4].filters[0]=StripPrefix=1
spring.cloud.gateway.routes[4].filters[1]=AuthenticationFilter # APPLY THE FILTER

spring.cloud.gateway.routes[5].id=driver-service-route
spring.cloud.gateway.routes[5].uri=lb://DRIVER-SERVICE
spring.cloud.gateway.routes[5].predicates[0]=Path=/driver-service/** # Assuming these are protected
spring.cloud.gateway.routes[5].filters[0]=StripPrefix=1
spring.cloud.gateway.routes[5].filters[1]=AuthenticationFilter # APPLY THE FILTER

spring.cloud.gateway.routes[6].id=delivery-service-route
spring.cloud.gateway.routes[6].uri=lb://DELIVERY-SERVICE
spring.cloud.gateway.routes[6].predicates[0]=Path=/delivery-service/** # Assuming these are protected
spring.cloud.gateway.routes[6].filters[0]=StripPrefix=1
spring.cloud.gateway.routes[6].filters[1]=AuthenticationFilter # APPLY THE FILTER

spring.cloud.gateway.routes[7].id=actuator-route
spring.cloud.gateway.routes[7].uri=no://op # no-op, won't forward, just for matching
spring.cloud.gateway.routes[7].predicates[0]=Path=/actuator/**

spring.cloud.gateway.httpclient.response-timeout=60s


management.endpoints.web.exposure.include=health,info,gateway,configprops,prometheus


logging.level.org.springframework.cloud.gateway=TRACE
logging.level.reactor.netty=DEBUG
logging.level.org.springframework.cloud.gateway.handler.predicate=TRACE
logging.level.org.springframework.cloud.gateway.filter=TRACE
logging.level.org.springframework.cloud.loadbalancer=TRACE
logging.level.com.netflix.discovery=TRACE
logging.level.com.netflix.eureka=TRACE
logging.level.org.springframework.cloud.netflix.eureka.http=TRACE

