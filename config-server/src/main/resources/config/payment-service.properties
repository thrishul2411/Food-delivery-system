# Properties served BY the config server TO the payment-service

# Port for the payment-service (e.g., 8084)
server.port=8084

# --- Database Connection (PostgreSQL - LOCALHOST) ---
# Point to a new 'payment_db' database
spring.datasource.url=jdbc:postgresql://localhost:5432/payment_db

# Use the same user/password or create a dedicated one
spring.datasource.username=postgres
spring.datasource.password=root

spring.datasource.driver-class-name=org.postgresql.Driver

# --- JPA / Hibernate Configuration ---
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# --- Actuator Configuration ---
management.endpoints.web.exposure.include=health,info,prometheus,configprops
management.endpoint.health.show-details=always

# --- Basic Spring Cloud Stream Config (Placeholder) ---
# We'll configure specific binders (RabbitMQ/Kafka) and destinations later
# spring.cloud.stream.function.definition=paymentOutcomeProducer # Example
# spring.cloud.stream.bindings.paymentOutcomeProducer-out-0.destination=payment-outcomes # Example topic/exchange

