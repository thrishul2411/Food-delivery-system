# --- Application Identification & Config Server ---
# Use lowercase to align with potential gateway discovery locator usage later
spring.application.name=restaurant-service

# Import configuration from Config Server
spring.config.import=optional:configserver:http://localhost:8888

# --- Service Discovery (Eureka Client Configuration) ---
eureka.client.service-url.defaultZone=http://localhost:8761/eureka/
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true

# Properties served BY the config server TO the restaurant-service

# Port for the restaurant-service to run on (choose a different one, e.g., 8082)
server.port=8082

# --- Database Connection (PostgreSQL - LOCALHOST) ---
# Point to a DIFFERENT database on the same local server
spring.datasource.url=jdbc:postgresql://localhost:5432/restaurant_db

# Can potentially reuse the same user created earlier, or create a new one
spring.datasource.username=postgres
spring.datasource.password=root

spring.datasource.driver-class-name=org.postgresql.Driver

# --- JPA / Hibernate Configuration ---
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# --- Actuator Configuration ---
management.endpoints.web.exposure.include=health,info,prometheus,configprops
management.endpoint.health.show-details=always